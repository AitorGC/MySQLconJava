/*
 * Este programa pertenece a Aittor Santana y se ha desarrollado
 * exclusivamente para la actividad de BAE del CFGS DAM Tarde
 * del IES El Rincón - Curso 2016/17
 */
package aitorbae;

/**
 *
 * @author Aitor Arnaldo Santana Ortega
 * @version 1.0
 */

import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class Formulario extends javax.swing.JFrame {
    
    //private final String TABLA = "esc_cli";
    private final ConectorBD CBD = new ConectorBD();
    
    private String sql1, sql2;
    private String cod_Cliente, nombre, telefono;
    private String cod_Escrituras, tipo, nom_fich, num_inter;
    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextCodigoCliente = new javax.swing.JTextField();
        jTextTelefonoCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextNombreCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextCodigoEscrituras = new javax.swing.JTextField();
        jTextNumInterventores = new javax.swing.JTextField();
        jComboBoxTipoEscrituras = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextNombreFichero = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBUSCAR = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnBuscarTipo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtQuery = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FORMULARIO DE GESTIÓN DE NOTARÍA");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("CLIENTE");

        jLabel1.setText("Codigo");

        jLabel3.setText("Nombre");

        jLabel4.setText("Teléfono");

        jLabel5.setText("Código");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("ESCRITURAS");

        jTextNumInterventores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNumInterventoresActionPerformed(evt);
            }
        });

        jComboBoxTipoEscrituras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "TEST", "CPVE" }));

        jLabel7.setText("Tipo");

        jLabel8.setText("Nº interv");

        jLabel9.setText("Ruta del Fichero");

        jTextNombreFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreFicheroActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBUSCAR.setText("BUSCAR CODIGO");
        btnBUSCAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBUSCARActionPerformed(evt);
            }
        });

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCerrar.setForeground(new java.awt.Color(255, 0, 0));
        btnCerrar.setText("SALIR");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnBuscarTipo.setText("BUSCAR POR TIPO");
        btnBuscarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTipoActionPerformed(evt);
            }
        });

        jtQuery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtQuery.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtQuery);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextCodigoEscrituras, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxTipoEscrituras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextNumInterventores, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextNombreFichero)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jTextNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jTextTelefonoCliente))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBUSCAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscarTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCodigoEscrituras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipoEscrituras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNumInterventores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextNombreFichero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(btnGuardar)
                    .addComponent(btnBUSCAR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscarTipo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextNumInterventoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNumInterventoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNumInterventoresActionPerformed

    private void jTextNombreFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreFicheroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreFicheroActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarGUI();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBUSCARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBUSCARActionPerformed
        String codigo = Util.capturar(this, "Inserte el código", getTitle());
        limpiarGUI();
        if(buscar(codigo)){
            btnGuardar.setEnabled(false);
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
            jTextCodigoCliente.setEnabled(false);
            Util.informar(this, "Datos buscados correctamente", getTitle());
        }else{
            Util.advertir(this, "No se encontraron datos", getTitle());
        }
    }//GEN-LAST:event_btnBUSCARActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        obtenerDatosGUI();
        if(guardar()){
            Util.informar(this, "Datos guardados correctamente", getTitle());
            limpiarGUI();
        }else{
            Util.advertir(this, "ERROR: No se guardaron los datos", getTitle());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        obtenerDatosGUI();
        if(actualizar()){
            Util.informar(this, "Datos actuazlizados correctamente", getTitle());
            limpiarGUI();
        }else{
            Util.advertir(this, "ERROR: No se actualizaron los datos", getTitle());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        obtenerDatosGUI();
        if(borrar()){
            Util.informar(this, "Datos borrados correctamente", getTitle());
            limpiarGUI();
        }else{
            Util.advertir(this, "ERROR: No se borraron los datos", getTitle());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTipoActionPerformed
        String tipillo = Util.capturar(this, "Inserte el tipo a buscar", getTitle());
        limpiarGUI();
        if(buscar2(tipillo)){
            Util.informar(this, "Datos buscados correctamente", getTitle());
        }else{
            Util.advertir(this, "No se encontraron datos", getTitle());
        }
    }//GEN-LAST:event_btnBuscarTipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }
    
    private void limpiarGUI(){
        this.jTextCodigoCliente.setText("");
        this.jTextCodigoEscrituras.setText("");
        this.jTextNombreCliente.setText("");
        this.jTextNombreFichero.setText("");
        this.jTextNumInterventores.setText("");
        this.jTextTelefonoCliente.setText("");
        
        this.jComboBoxTipoEscrituras.setSelectedIndex(0);
        
        this.jTextCodigoCliente.setEnabled(true);
        this.btnGuardar.setEnabled(true);
        this.btnActualizar.setEnabled(false);
        this.btnEliminar.setEnabled(false);
        
        this.jTextCodigoCliente.grabFocus(); //cursor a este campo
    }
    
    private void obtenerDatosGUI(){
        cod_Cliente = jTextCodigoCliente.getText();
        nombre = jTextNombreCliente.getText();
        telefono = jTextTelefonoCliente.getText();
        
        cod_Escrituras = jTextCodigoEscrituras.getText();
        tipo = (jComboBoxTipoEscrituras.getSelectedItem().toString());
        num_inter = jTextNumInterventores.getText();
        nom_fich = jTextNombreFichero.getText();
    }
    
    private boolean guardar(){
        boolean estado = false;
        
        if (CBD.conectar()){
            
            sql1 = "INSERT INTO clientes VALUES( " + 
                    "'" + cod_Cliente + "'," +
                    "'" + nombre + "'," + 
                    "'" + telefono + "');";
            
            sql2 = "INSERT INTO escrituras VALUES( " + 
                   "'" + cod_Escrituras + "'," +
                    "'" + tipo + "'," + 
                    "'" + nom_fich + "'," +
                    "'" + num_inter + "');";
            
            if (CBD.ejecutar(sql1, sql2)){
                estado = true;
            }
            CBD.desconectar();
        }else{
            Util.advertir(this, "ERROR: Verifique la conexión con la BD", getTitle());
        }
        return estado;
    }
    
        private boolean borrar(){
        boolean estado = false;
        
        if (CBD.conectar()){
            sql1 = "DELETE FROM clientes WHERE cod_cliente = " + 
                    cod_Cliente + ";";
            sql2 = "DELETE FROM escrituras WHERE codigo = " + 
                    cod_Cliente + ";";
            
            if (CBD.ejecutar(sql1, sql2)){
                estado = true;
            }
            CBD.desconectar();
        }else{
            Util.advertir(this, "ERROR: Verifique la conexión con la BD", getTitle());
        }
        return estado;
    }
    
    private boolean actualizar(){
        boolean estado = false;
        
        if(CBD.conectar()){
            sql1 = "UPDATE clientes SET cod_cliente = " + cod_Cliente + ", " + 
                    "nombre = '" + nombre + "', " + 
                    "telefono = '" + telefono + 
                    "' WHERE cod_cliente = " + cod_Cliente + ";";
            
            sql2 = "UPDATE escrituras SET codigo = " + cod_Escrituras + ", " + 
                    "tipo = '" + tipo + "', " + 
                    "nom_fich = '" + nom_fich +  "', " +
                    "num_interv = '" + num_inter + 
                    "' WHERE codigo = " + cod_Escrituras + ";";
            
            if (CBD.ejecutar(sql1, sql2)){
                estado = true;
            }
            CBD.desconectar();
        }else{
            Util.advertir(this, "ERROR: Verifique la conexión con la BD", getTitle());
        }        
        return estado;
    }
    
    private boolean buscar(String id){
        boolean estado = false;
        
        if(CBD.conectar()){
            sql1 = "SELECT * FROM clientes WHERE cod_cliente = " + id + ";";
            
            ResultSet regs = CBD.seleccionar(sql1);
            try{
                if(regs.next()){
                    jTextCodigoCliente.setText(regs.getString("cod_cliente"));
                    jTextNombreCliente.setText(regs.getString("nombre"));
                    jTextTelefonoCliente.setText(regs.getString("telefono"));
                    estado = true;
                }
            }catch(SQLException sqle){
                System.err.println("ERROR: buscar()");
                System.err.println(sqle.getMessage());
            }
            
            sql2 = "SELECT * FROM escrituras WHERE codigo = " + id + ";";
            ResultSet regis = CBD.seleccionar(sql2);
            try{
                if(regis.next()){
                    jTextCodigoEscrituras.setText(regis.getString("codigo"));
                    char c = regis.getString("tipo").charAt(0);
                    int i = (c == '*' ? 0 : (c == 'T' ? 1 : 2));
                    jComboBoxTipoEscrituras.setSelectedIndex(i);
                    jTextNombreFichero.setText(regis.getString("nom_fich"));
                    jTextNumInterventores.setText(regis.getString("num_interv"));
                    estado = true;
                }
            }catch(SQLException sqle){
                System.err.println("ERROR: buscar2()");
                System.err.println(sqle.getMessage());
            }            
            
            CBD.desconectar();
        }else{
            Util.advertir(this, "ERROR: Verifique la conexión con la BD", getTitle());
        }
        return estado;
    }
    
    private boolean buscar2(String tipazo){
        boolean estado = false;
        
        if(CBD.conectar()){
            sql1 = "SELECT * FROM escrituras WHERE tipo = '" + tipazo + "';";
            
            ResultSet regs = CBD.seleccionar(sql1);
            try{
                if(regs.next()){
                    DefaultTableModel modelo = new DefaultTableModel();
                    this.jtQuery.setModel(modelo);
                    
                    ResultSetMetaData rsMd = regs.getMetaData();
                    //Cojo la cantidad de columnas que tiene la consulta
                    int cantidadColumnas = rsMd.getColumnCount();
                    //Establezco como cabecera el nombre de las columnas
                    for (int i = 1; i <= cantidadColumnas; i++) {
                        modelo.addColumn(rsMd.getColumnLabel(i));
                    }
                    //Creo las filas para el JTable
                    Object[] fila = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                            fila[i]=regs.getObject(i+1);
                        }
                    modelo.addRow(fila);
                    //Creo las filas para el JTable
                    while (regs.next()) {
                        for (int i = 0; i < cantidadColumnas; i++) {
                            fila[i]=regs.getObject(i+1);
                        }
                        modelo.addRow(fila);
                    }
                    regs.close();
                    estado = true;
                }
            }catch(SQLException sqle){
                System.err.println("ERROR: buscar2()");
                System.err.println(sqle.getMessage());
            }
            
            CBD.desconectar();
        }else{
            Util.advertir(this, "ERROR: Verifique la conexión con la BD", getTitle());
        }
        return estado;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBUSCAR;
    private javax.swing.JButton btnBuscarTipo;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> jComboBoxTipoEscrituras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextCodigoCliente;
    private javax.swing.JTextField jTextCodigoEscrituras;
    private javax.swing.JTextField jTextNombreCliente;
    private javax.swing.JTextField jTextNombreFichero;
    private javax.swing.JTextField jTextNumInterventores;
    private javax.swing.JTextField jTextTelefonoCliente;
    private javax.swing.JTable jtQuery;
    // End of variables declaration//GEN-END:variables
}